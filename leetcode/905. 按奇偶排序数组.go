package leetcode

// 905. 按奇偶排序数组

// 给定一个非负整数数组 A，返回一个数组，在该数组中， A 的所有偶数元素之后跟着所有奇数元素。

// 你可以返回满足此条件的任何数组作为答案。

// 示例：

// 输入：[3,1,2,4]
// 输出：[2,4,3,1]
// 输出 [4,2,3,1]，[2,4,1,3] 和 [4,2,1,3] 也会被接受。

// 提示：

// 1 <= A.length <= 5000
// 0 <= A[i] <= 5000

// 思路：参照快速排序的思路，index作为指针，index之前的值都为偶数，i遍历整个数组，发现偶数就与index指针交换，
// 并将index往后移一位。

func sortArrayByParity(A []int) []int {
    index := 0
    for i := 0; i < len(A); i++ {
        if A[i] & 1 == 0 {
            // 偶数
            A[i], A[index] = A[index], A[i]
            index++
        }
    }
    return A
}